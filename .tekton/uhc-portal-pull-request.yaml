apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/RedHatInsights/uhc-portal?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch
      == "main"
    pipelinesascode.tekton.dev/pipeline: https://github.com/RedHatInsights/konflux-pipelines/raw/main/pipelines/platform-ui/docker-build-run-unit-tests.yaml
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: ocm-ui
    appstudio.openshift.io/component: uhc-portal
    pipelines.appstudio.openshift.io/type: build
  name: uhc-portal-on-pull-request
  namespace: ocm-ui-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/ocm-ui-tenant/uhc-portal:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: dockerfile
    value: build-tools/Dockerfile
  - name: unit-tests-script
    value: |
      #!/bin/bash
      set -ex
      npm install -g yarn
      yarn install
      # cap the linter's heap size, as it tends to hog the RAM,
      # causing the OS to kill the process due to out-of-memory errors
      NODE_OPTIONS='--max-old-space-size=4096' yarn lint
      yarn prettier
      yarn test --run-in-band --no-cache
  pipelineRef:
    name: docker-build
  taskRunTemplate:
    serviceAccountName: build-pipeline-uhc-portal
  # extend the unit-tests pipeline task to increase RAM
  taskRunSpecs:
    - pipelineTaskName: run-unit-tests
      stepSpecs:
        - name: unit-tests
          computeResources:
            requests:
              memory: "6Gi"
            limits:
              memory: "6Gi"
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
